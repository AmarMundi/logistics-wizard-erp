swagger: '2.0'
info:
  version: 1.0.0
  title: Logistics Wizard ERP
  description: Defines the minimum set of data models and operations required by the Logistics Wizard application
  license:
    name: Apache 2.0
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
paths:
  '/Suppliers/{id}/products/{fk}':
    get:
      tags:
        - Supplier
      summary: Find a related item by id for products.
      operationId: Supplier.prototype.__findById__products
      parameters:
        - name: fk
          in: path
          description: Foreign key for products
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Product'
      deprecated: false
    delete:
      tags:
        - Supplier
      summary: Delete a related item by id for products.
      operationId: Supplier.prototype.__destroyById__products
      parameters:
        - name: fk
          in: path
          description: Foreign key for products
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Supplier
      summary: Update a related item by id for products.
      operationId: Supplier.prototype.__updateById__products
      parameters:
        - name: fk
          in: path
          description: Foreign key for products
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/Product'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Product'
      deprecated: false
  '/Suppliers/{id}/products':
    delete:
      tags:
        - Supplier
      summary: Deletes all products of this model.
      operationId: Supplier.prototype.__delete__products
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Suppliers/{id}/products/count':
    get:
      tags:
        - Supplier
      summary: Counts products of Supplier.
      operationId: Supplier.prototype.__count__products
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  '/Suppliers/{id}':
    get:
      tags:
        - Supplier
      summary: Find a model instance by id from the data source.
      operationId: Supplier.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Supplier'
      deprecated: false
  /Suppliers:
    get:
      tags:
        - Supplier
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Supplier.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Supplier'
      deprecated: false
  '/Products/{id}/distributionCenters':
    get:
      tags:
        - Product
      summary: Queries distributionCenters of Product.
      operationId: Product.prototype.__get__distributionCenters
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/DistributionCenter'
      deprecated: false
  '/Products/{id}':
    get:
      tags:
        - Product
      summary: Find a model instance by id from the data source.
      operationId: Product.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Product'
      deprecated: false
  /Products:
    get:
      tags:
        - Product
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Product.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
      deprecated: false
  '/DistributionCenters/{id}/products':
    get:
      tags:
        - DistributionCenter
      summary: Queries products of DistributionCenter.
      operationId: DistributionCenter.prototype.__get__products
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
      deprecated: false
  '/DistributionCenters/{id}':
    get:
      tags:
        - DistributionCenter
      summary: Find a model instance by id from the data source.
      operationId: DistributionCenter.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/DistributionCenter'
      deprecated: false
  /DistributionCenters:
    get:
      tags:
        - DistributionCenter
      summary: Find all instances of the model matched by filter from the data source.
      operationId: DistributionCenter.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/DistributionCenter'
      deprecated: false
  '/Shipments/{id}/distributionCenter':
    get:
      tags:
        - Shipment
      summary: Fetches belongsTo relation distributionCenter.
      operationId: Shipment.prototype.__get__distributionCenter
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/DistributionCenter'
      deprecated: false
  '/Shipments/{id}/retailer':
    get:
      tags:
        - Shipment
      summary: Fetches belongsTo relation retailer.
      operationId: Shipment.prototype.__get__retailer
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Retailer'
      deprecated: false
  '/Shipments/{id}/items/{fk}':
    get:
      tags:
        - Shipment
      summary: Find a related item by id for items.
      operationId: Shipment.prototype.__findById__items
      parameters:
        - name: fk
          in: path
          description: Foreign key for items
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LineItem'
      deprecated: false
    delete:
      tags:
        - Shipment
      summary: Delete a related item by id for items.
      operationId: Shipment.prototype.__destroyById__items
      parameters:
        - name: fk
          in: path
          description: Foreign key for items
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Shipment
      summary: Update a related item by id for items.
      operationId: Shipment.prototype.__updateById__items
      parameters:
        - name: fk
          in: path
          description: Foreign key for items
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/LineItem'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LineItem'
      deprecated: false
  '/Shipments/{id}/items':
    get:
      tags:
        - Shipment
      summary: Queries items of Shipment.
      operationId: Shipment.prototype.__get__items
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/LineItem'
      deprecated: false
    post:
      tags:
        - Shipment
      summary: Creates a new instance in items of this model.
      operationId: Shipment.prototype.__create__items
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/LineItem'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/LineItem'
      deprecated: false
    delete:
      tags:
        - Shipment
      summary: Deletes all items of this model.
      operationId: Shipment.prototype.__delete__items
      parameters:
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Shipments/{id}/items/count':
    get:
      tags:
        - Shipment
      summary: Counts items of Shipment.
      operationId: Shipment.prototype.__count__items
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /Shipments:
    post:
      tags:
        - Shipment
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Shipment.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/Shipment'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Shipment'
      deprecated: false
    get:
      tags:
        - Shipment
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Shipment.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Shipment'
      deprecated: false
  '/Shipments/{id}':
    get:
      tags:
        - Shipment
      summary: Find a model instance by id from the data source.
      operationId: Shipment.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Shipment'
      deprecated: false
    delete:
      tags:
        - Shipment
      summary: Delete a model instance by id from the data source.
      operationId: Shipment.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - Shipment
      summary: >-
        Update attributes for a model instance and persist it into the data
        source.
      operationId: Shipment.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/Shipment'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Shipment'
      deprecated: false
  '/Retailers/{id}':
    get:
      tags:
        - Retailer
      summary: Find a model instance by id from the data source.
      operationId: Retailer.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Retailer'
      deprecated: false
  /Retailers:
    get:
      tags:
        - Retailer
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Retailer.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Retailer'
      deprecated: false
  '/Inventories/{id}/product':
    get:
      tags:
        - Inventory
      summary: Fetches belongsTo relation product.
      operationId: Inventory.prototype.__get__product
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Product'
      deprecated: false
  '/Inventories/{id}/distributionCenter':
    get:
      tags:
        - Inventory
      summary: Fetches belongsTo relation distributionCenter.
      operationId: Inventory.prototype.__get__distributionCenter
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/DistributionCenter'
      deprecated: false
  /Inventories:
    post:
      tags:
        - Inventory
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Inventory.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/Inventory'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Inventory'
      deprecated: false
    get:
      tags:
        - Inventory
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Inventory.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Inventory'
      deprecated: false
  '/Inventories/{id}':
    get:
      tags:
        - Inventory
      summary: Find a model instance by id from the data source.
      operationId: Inventory.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Inventory'
      deprecated: false
    delete:
      tags:
        - Inventory
      summary: Delete a model instance by id from the data source.
      operationId: Inventory.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - Inventory
      summary: >-
        Update attributes for a model instance and persist it into the data
        source.
      operationId: Inventory.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/Inventory'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Inventory'
      deprecated: false
  '/Users/{id}/accessTokens/{fk}':
    get:
      tags:
        - ERPUser
      summary: Find a related item by id for accessTokens.
      operationId: ERPUser.prototype.__findById__accessTokens
      parameters:
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/AccessToken'
      deprecated: false
    delete:
      tags:
        - ERPUser
      summary: Delete a related item by id for accessTokens.
      operationId: ERPUser.prototype.__destroyById__accessTokens
      parameters:
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - ERPUser
      summary: Update a related item by id for accessTokens.
      operationId: ERPUser.prototype.__updateById__accessTokens
      parameters:
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/AccessToken'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/AccessToken'
      deprecated: false
  '/Users/{id}/accessTokens':
    get:
      tags:
        - ERPUser
      summary: Queries accessTokens of ERPUser.
      operationId: ERPUser.prototype.__get__accessTokens
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/AccessToken'
      deprecated: false
    post:
      tags:
        - ERPUser
      summary: Creates a new instance in accessTokens of this model.
      operationId: ERPUser.prototype.__create__accessTokens
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/AccessToken'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/AccessToken'
      deprecated: false
    delete:
      tags:
        - ERPUser
      summary: Deletes all accessTokens of this model.
      operationId: ERPUser.prototype.__delete__accessTokens
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Users/{id}/accessTokens/count':
    get:
      tags:
        - ERPUser
      summary: Counts accessTokens of ERPUser.
      operationId: ERPUser.prototype.__count__accessTokens
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /Users/login:
    post:
      tags:
        - ERPUser
      summary: Login a user with username/email and password.
      operationId: ERPUser.login
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            type: object
        - name: include
          in: query
          description: >-
            Related objects to include in the response. See the description of
            return value for more details.
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            description: >+
              The response body contains properties of the AccessToken created
              on login.

              Depending on the value of `include` parameter, the body may
              contain additional properties:

                - `user` - `{User}` - Data of the currently logged in user. (`include=user`)

            type: object
      deprecated: false
  /Users/logout:
    post:
      tags:
        - ERPUser
      summary: Logout a user with access token.
      operationId: ERPUser.logout
      parameters: []
      responses:
        '204':
          description: Request was successful
      deprecated: false
definitions:
  x-any:
    properties: {}
  Product:
    properties:
      name:
        type: string
      id:
        type: string
      supplierId:
        type: string
    required:
      - name
    additionalProperties: false
  Supplier:
    properties:
      name:
        type: string
      id:
        type: string
    required:
      - name
    additionalProperties: false
  DistributionCenter:
    properties:
      id:
        type: string
      address:
        $ref: '#/definitions/Address'
      contact:
        $ref: '#/definitions/Contact'
    additionalProperties: false
  Retailer:
    properties:
      id:
        type: string
      address:
        $ref: '#/definitions/Address'
      contact:
        $ref: '#/definitions/Contact'
    additionalProperties: false
  LineItem:
    properties:
      quantity:
        default: 0
        type: number
        format: double
      id:
        type: string
      shipmentId:
        type: string
    required:
      - quantity
    additionalProperties: false
  Shipment:
    properties:
      status:
        default: NEW
        type: string
      createdAt:
        default: $now
        type: string
        format: date
      updatedAt:
        type: string
        format: date
      deliveredAt:
        type: string
        format: date
      estimatedTimeOfArrival:
        type: string
        format: date
      id:
        type: string
      currentLocation:
        $ref: '#/definitions/Address'
      fromId:
        type: string
      toId:
        type: string
    required:
      - status
      - createdAt
    additionalProperties: false
  Inventory:
    properties:
      quantity:
        default: 0
        type: number
        format: double
      id:
        type: string
      productId:
        type: string
      dcId:
        type: string
    additionalProperties: false
  AccessToken:
    properties:
      id:
        type: string
      ttl:
        default: 1209600
        description: time to live in seconds (2 weeks by default)
        type: number
        format: double
      created:
        type: string
        format: date
      userId:
        type: string
    required:
      - id
    additionalProperties: false
  Address:
    properties:
      city:
        type: string
      state:
        type: string
      country:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      id:
        type: string
    additionalProperties: false
  Contact:
    properties:
      name:
        type: string
      id:
        type: string
    required:
      - name
    additionalProperties: false
tags:
  - name: Supplier
  - name: Product
  - name: DistributionCenter
  - name: Shipment
  - name: Retailer
  - name: Inventory
  - name: ERPUser
